version: '3'

services:
    db:
        container_name: mysqldb
        restart: always
        image: mysql
        env_file:
        - .env_mysql/.mysql.env
        volumes:
            - ./sql-data/db:/var/lib/mysql
        ports: 
            - "3306:3306"
    api:
         depends_on: 
             - db 
         container_name: backendapi
         restart: always
         build:
             context: .
             dockerfile: Dockerfile
         command: bash -c 'while !</dev/tcp/db/3306; do sleep 1; done; npm run dev'
         ports:
             - "3001:3001"
         env_file:
         - ./api/.env
         volumes:
             - ./:/app
    mosquitto:
        image: eclipse-mosquitto
        container_name: mosquittobroker
        ports:
            - "1883:1883"
            - "9001:9001"
        #network_mode: host
        # command: >
        #     bash -c "kill $(lsof -t -i:1883) || true && /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf"
        volumes:
        - './mqtt/etc/mosquitto.conf:/mosquitto/config/mosquitto.conf'
        - './mqtt/etc/mqttusers:/mosquitto/config/mqttusers'
        - './mqtt/data:/mosquitto/data'
        - './mqtt/log:/mosquitto/log'
        restart: always
    web:
        container_name: web
        restart: always
        build:
            context: .
            dockerfile: Dockerfile-frontend
        ports:
            - "80:80"
    # messenger:
    #      container_name: messenger
    #      restart: always
    #      build:
    #          context: api-whatsapp-ts
    #          dockerfile: Dockerfile
    #      ports:
    #          - "3003:3003"
    #      volumes:
    #          - ./:/messenger
    portainer:
        image: portainer/portainer-ce
        restart: always
        ports:
            - "9000:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data
volumes:
    portainer_data:

